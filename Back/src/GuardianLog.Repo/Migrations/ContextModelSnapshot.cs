// <auto-generated />
using System;
using GuardianLog.Repo.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GuardianLog.Repo.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GuardianLog.Domain.Cidade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CodCidadeIBGE")
                        .HasColumnType("int");

                    b.Property<int>("IdEstado")
                        .HasColumnType("int");

                    b.Property<string>("NomeCidade")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdEstado");

                    b.ToTable("Cidades");
                });

            modelBuilder.Entity("GuardianLog.Domain.Cor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Cores");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Amarelo"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Azul"
                        },
                        new
                        {
                            Id = 3,
                            Nome = "Branco"
                        },
                        new
                        {
                            Id = 4,
                            Nome = "Cinza"
                        },
                        new
                        {
                            Id = 5,
                            Nome = "Dourado"
                        },
                        new
                        {
                            Id = 6,
                            Nome = "Laranja"
                        },
                        new
                        {
                            Id = 7,
                            Nome = "Marrom"
                        },
                        new
                        {
                            Id = 8,
                            Nome = "Prata"
                        },
                        new
                        {
                            Id = 9,
                            Nome = "Preto"
                        },
                        new
                        {
                            Id = 10,
                            Nome = "Verde"
                        },
                        new
                        {
                            Id = 11,
                            Nome = "Vermelho"
                        },
                        new
                        {
                            Id = 12,
                            Nome = "Não informado"
                        });
                });

            modelBuilder.Entity("GuardianLog.Domain.Estado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CodUFIBGE")
                        .HasColumnType("int");

                    b.Property<int>("IdPais")
                        .HasColumnType("int");

                    b.Property<string>("NomeEstado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UF")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdPais");

                    b.ToTable("Estados");
                });

            modelBuilder.Entity("GuardianLog.Domain.MarcaVeiculo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MarcasVeiculos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DataCadastro = new DateTime(2025, 3, 11, 16, 29, 14, 862, DateTimeKind.Local).AddTicks(8380),
                            Nome = "Scania"
                        },
                        new
                        {
                            Id = 2,
                            DataCadastro = new DateTime(2025, 3, 11, 16, 29, 14, 862, DateTimeKind.Local).AddTicks(8406),
                            Nome = "Volvo"
                        },
                        new
                        {
                            Id = 3,
                            DataCadastro = new DateTime(2025, 3, 11, 16, 29, 14, 862, DateTimeKind.Local).AddTicks(8408),
                            Nome = "DAF"
                        },
                        new
                        {
                            Id = 4,
                            DataCadastro = new DateTime(2025, 3, 11, 16, 29, 14, 862, DateTimeKind.Local).AddTicks(8410),
                            Nome = "MAN"
                        },
                        new
                        {
                            Id = 5,
                            DataCadastro = new DateTime(2025, 3, 11, 16, 29, 14, 862, DateTimeKind.Local).AddTicks(8411),
                            Nome = "Renault"
                        },
                        new
                        {
                            Id = 6,
                            DataCadastro = new DateTime(2025, 3, 11, 16, 29, 14, 862, DateTimeKind.Local).AddTicks(8413),
                            Nome = "Volkswagen"
                        },
                        new
                        {
                            Id = 7,
                            DataCadastro = new DateTime(2025, 3, 11, 16, 29, 14, 862, DateTimeKind.Local).AddTicks(8414),
                            Nome = "Ford"
                        },
                        new
                        {
                            Id = 8,
                            DataCadastro = new DateTime(2025, 3, 11, 16, 29, 14, 862, DateTimeKind.Local).AddTicks(8416),
                            Nome = "Iveco"
                        },
                        new
                        {
                            Id = 9,
                            DataCadastro = new DateTime(2025, 3, 11, 16, 29, 14, 862, DateTimeKind.Local).AddTicks(8418),
                            Nome = "Mercedes-Benz"
                        });
                });

            modelBuilder.Entity("GuardianLog.Domain.ModeloVeiculo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdMarcaVeiculo")
                        .HasColumnType("int");

                    b.Property<string>("NomeModelo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdMarcaVeiculo");

                    b.ToTable("ModelosVeiculos");
                });

            modelBuilder.Entity("GuardianLog.Domain.Pais", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Paises");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Brasil"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Argentina"
                        },
                        new
                        {
                            Id = 3,
                            Nome = "Chile"
                        },
                        new
                        {
                            Id = 4,
                            Nome = "Uruguai"
                        });
                });

            modelBuilder.Entity("GuardianLog.Domain.TecnologiaRastreamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TecnologiasRastreamento");
                });

            modelBuilder.Entity("GuardianLog.Domain.TipoCarreta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TiposCarreta");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DataCadastro = new DateTime(2025, 3, 11, 16, 29, 14, 863, DateTimeKind.Local).AddTicks(4173),
                            Nome = "Baú"
                        },
                        new
                        {
                            Id = 2,
                            DataCadastro = new DateTime(2025, 3, 11, 16, 29, 14, 863, DateTimeKind.Local).AddTicks(4182),
                            Nome = "Baú Refrigerado"
                        },
                        new
                        {
                            Id = 3,
                            DataCadastro = new DateTime(2025, 3, 11, 16, 29, 14, 863, DateTimeKind.Local).AddTicks(4184),
                            Nome = "Sider"
                        },
                        new
                        {
                            Id = 4,
                            DataCadastro = new DateTime(2025, 3, 11, 16, 29, 14, 863, DateTimeKind.Local).AddTicks(4185),
                            Nome = "Tanque"
                        },
                        new
                        {
                            Id = 5,
                            DataCadastro = new DateTime(2025, 3, 11, 16, 29, 14, 863, DateTimeKind.Local).AddTicks(4187),
                            Nome = "Graneleiro"
                        },
                        new
                        {
                            Id = 6,
                            DataCadastro = new DateTime(2025, 3, 11, 16, 29, 14, 863, DateTimeKind.Local).AddTicks(4188),
                            Nome = "Prancha"
                        },
                        new
                        {
                            Id = 7,
                            DataCadastro = new DateTime(2025, 3, 11, 16, 29, 14, 863, DateTimeKind.Local).AddTicks(4190),
                            Nome = "Bitrem"
                        },
                        new
                        {
                            Id = 8,
                            DataCadastro = new DateTime(2025, 3, 11, 16, 29, 14, 863, DateTimeKind.Local).AddTicks(4191),
                            Nome = "Cegonha"
                        });
                });

            modelBuilder.Entity("GuardianLog.Domain.TipoVeiculo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TiposVeiculo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DataCadastro = new DateTime(2025, 3, 11, 16, 29, 14, 863, DateTimeKind.Local).AddTicks(4258),
                            Nome = "Cavalo"
                        },
                        new
                        {
                            Id = 2,
                            DataCadastro = new DateTime(2025, 3, 11, 16, 29, 14, 863, DateTimeKind.Local).AddTicks(4259),
                            Nome = "Carreta"
                        },
                        new
                        {
                            Id = 3,
                            DataCadastro = new DateTime(2025, 3, 11, 16, 29, 14, 863, DateTimeKind.Local).AddTicks(4261),
                            Nome = "Truck"
                        },
                        new
                        {
                            Id = 4,
                            DataCadastro = new DateTime(2025, 3, 11, 16, 29, 14, 863, DateTimeKind.Local).AddTicks(4263),
                            Nome = "Toco"
                        },
                        new
                        {
                            Id = 5,
                            DataCadastro = new DateTime(2025, 3, 11, 16, 29, 14, 863, DateTimeKind.Local).AddTicks(4264),
                            Nome = "VUC"
                        },
                        new
                        {
                            Id = 6,
                            DataCadastro = new DateTime(2025, 3, 11, 16, 29, 14, 863, DateTimeKind.Local).AddTicks(4266),
                            Nome = "Automovel"
                        },
                        new
                        {
                            Id = 7,
                            DataCadastro = new DateTime(2025, 3, 11, 16, 29, 14, 863, DateTimeKind.Local).AddTicks(4267),
                            Nome = "Onibus"
                        },
                        new
                        {
                            Id = 8,
                            DataCadastro = new DateTime(2025, 3, 11, 16, 29, 14, 863, DateTimeKind.Local).AddTicks(4269),
                            Nome = "Utilitário"
                        });
                });

            modelBuilder.Entity("GuardianLog.Domain.TipoVinculo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TiposVinculo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nome = "Agregado"
                        },
                        new
                        {
                            Id = 2,
                            Nome = "Frota"
                        },
                        new
                        {
                            Id = 3,
                            Nome = "Terceiro"
                        });
                });

            modelBuilder.Entity("GuardianLog.Domain.Veiculo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AnoFabricacao")
                        .HasColumnType("int");

                    b.Property<string>("Chassi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DataAlteracao")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdCidade")
                        .HasColumnType("int");

                    b.Property<int>("IdCor")
                        .HasColumnType("int");

                    b.Property<int>("IdEquipamento")
                        .HasColumnType("int");

                    b.Property<int>("IdModeloVeiculo")
                        .HasColumnType("int");

                    b.Property<int>("IdTecnologia")
                        .HasColumnType("int");

                    b.Property<int?>("IdTipoCarreta")
                        .HasColumnType("int");

                    b.Property<int>("IdTipoVeiculo")
                        .HasColumnType("int");

                    b.Property<int>("IdTipoVinculo")
                        .HasColumnType("int");

                    b.Property<string>("Placa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Renavam")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("VeiculoInternacional")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("IdCidade");

                    b.HasIndex("IdCor");

                    b.HasIndex("IdModeloVeiculo");

                    b.HasIndex("IdTecnologia");

                    b.HasIndex("IdTipoCarreta");

                    b.HasIndex("IdTipoVeiculo");

                    b.HasIndex("IdTipoVinculo");

                    b.ToTable("Veiculos");
                });

            modelBuilder.Entity("GuardianLog.Domain.Cidade", b =>
                {
                    b.HasOne("GuardianLog.Domain.Estado", "Estado")
                        .WithMany("Cidades")
                        .HasForeignKey("IdEstado")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Estado");
                });

            modelBuilder.Entity("GuardianLog.Domain.Estado", b =>
                {
                    b.HasOne("GuardianLog.Domain.Pais", "Pais")
                        .WithMany("Estados")
                        .HasForeignKey("IdPais")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Pais");
                });

            modelBuilder.Entity("GuardianLog.Domain.ModeloVeiculo", b =>
                {
                    b.HasOne("GuardianLog.Domain.MarcaVeiculo", "MarcaVeiculo")
                        .WithMany("Modelos")
                        .HasForeignKey("IdMarcaVeiculo")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("MarcaVeiculo");
                });

            modelBuilder.Entity("GuardianLog.Domain.Veiculo", b =>
                {
                    b.HasOne("GuardianLog.Domain.Cidade", "Cidade")
                        .WithMany("Veiculos")
                        .HasForeignKey("IdCidade")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GuardianLog.Domain.Cor", "Cor")
                        .WithMany("Veiculos")
                        .HasForeignKey("IdCor")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GuardianLog.Domain.ModeloVeiculo", "ModeloVeiculo")
                        .WithMany("Veiculos")
                        .HasForeignKey("IdModeloVeiculo")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GuardianLog.Domain.TecnologiaRastreamento", "Tecnologia")
                        .WithMany("Veiculos")
                        .HasForeignKey("IdTecnologia")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GuardianLog.Domain.TipoCarreta", "TipoCarreta")
                        .WithMany("Veiculos")
                        .HasForeignKey("IdTipoCarreta")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("GuardianLog.Domain.TipoVeiculo", "TipoVeiculo")
                        .WithMany("Veiculos")
                        .HasForeignKey("IdTipoVeiculo")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("GuardianLog.Domain.TipoVinculo", "TipoVinculo")
                        .WithMany("Veiculos")
                        .HasForeignKey("IdTipoVinculo")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Cidade");

                    b.Navigation("Cor");

                    b.Navigation("ModeloVeiculo");

                    b.Navigation("Tecnologia");

                    b.Navigation("TipoCarreta");

                    b.Navigation("TipoVeiculo");

                    b.Navigation("TipoVinculo");
                });

            modelBuilder.Entity("GuardianLog.Domain.Cidade", b =>
                {
                    b.Navigation("Veiculos");
                });

            modelBuilder.Entity("GuardianLog.Domain.Cor", b =>
                {
                    b.Navigation("Veiculos");
                });

            modelBuilder.Entity("GuardianLog.Domain.Estado", b =>
                {
                    b.Navigation("Cidades");
                });

            modelBuilder.Entity("GuardianLog.Domain.MarcaVeiculo", b =>
                {
                    b.Navigation("Modelos");
                });

            modelBuilder.Entity("GuardianLog.Domain.ModeloVeiculo", b =>
                {
                    b.Navigation("Veiculos");
                });

            modelBuilder.Entity("GuardianLog.Domain.Pais", b =>
                {
                    b.Navigation("Estados");
                });

            modelBuilder.Entity("GuardianLog.Domain.TecnologiaRastreamento", b =>
                {
                    b.Navigation("Veiculos");
                });

            modelBuilder.Entity("GuardianLog.Domain.TipoCarreta", b =>
                {
                    b.Navigation("Veiculos");
                });

            modelBuilder.Entity("GuardianLog.Domain.TipoVeiculo", b =>
                {
                    b.Navigation("Veiculos");
                });

            modelBuilder.Entity("GuardianLog.Domain.TipoVinculo", b =>
                {
                    b.Navigation("Veiculos");
                });
#pragma warning restore 612, 618
        }
    }
}
